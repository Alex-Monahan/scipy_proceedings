{
  "title": "Compyle: a Python package for parallel computing",
  "authors": "Aditya Bhosale, Prabhu Ramachandran",
  "author": [
    "Aditya Bhosale",
    "Prabhu Ramachandran"
  ],
  "author_email": [
    "adityapb1546@gmail.com",
    "prabhu@aero.iitb.ac.in"
  ],
  "author_institution": [
    "Department of Aerospace Engineering",
    "IIT Bombay, Mumbai, India",
    "Department of Aerospace Engineering",
    "IIT Bombay, Mumbai, India"
  ],
  "author_institution_map": {
    "Aditya Bhosale": [
      "Department of Aerospace Engineering",
      "IIT Bombay, Mumbai, India"
    ],
    "Prabhu Ramachandran": [
      "Department of Aerospace Engineering",
      "IIT Bombay, Mumbai, India"
    ]
  },
  "abstract": [
    "Compyle allows users to execute a restricted subset of Python on a variety\nof HPC platforms. It is an embedded domain-specific language (eDSL) for\nparallel computing. It currently supports multi-core execution using\nCython, and OpenCL and CUDA for GPU devices. Users write code in a\nrestricted subset of Python that is automatically transpiled to\nhigh-performance Cython or C. Compyle also provides a few very general\npurpose and useful parallel algorithms that allow users to write code once\nand have them run on a variety of HPC platforms.",
    "In this article, we show how to implement a simple two-dimensional\nmolecular dynamics (MD) simulation package in pure Python using Compyle.\nThe result is a fully parallel program that is relatively easy to implement\nand solves a non-trivial problem. The code transparently executes on\nmulti-core CPUs and GPGPUs allowing simulations with millions of particles.\nA 3D MD code is also provided and compares very favorably with a well\nknown, open source, molecular dynamics package."
  ],
  "keywords": "High-performance computing, multi-core CPUs, GPGPU accelerators, parallel\nalgorithms, transpilation",
  "copyright_holder": "Aditya Bhosale et al.",
  "video": "",
  "bibliography": "references"
}